{"remainingRequest":"/Users/tomas/Desktop/hello-vue/node_modules/babel-loader/lib/index.js!/Users/tomas/Desktop/hello-vue/node_modules/eslint-loader/index.js??ref--13-0!/Users/tomas/Desktop/hello-vue/src/store/modules/auth/actions.js","dependencies":[{"path":"/Users/tomas/Desktop/hello-vue/src/store/modules/auth/actions.js","mtime":1618663602943},{"path":"/Users/tomas/Desktop/hello-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tomas/Desktop/hello-vue/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tomas/Desktop/hello-vue/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/tomas/Desktop/hello-vue/src/store/modules/auth/actions.js"],"names":["cred","timer","login","context","payload","url","dev","url_login","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","enctype","body","JSON","stringify","email","password","response","json","responseData","ok","code","Error","message","status","expiresIn","expirationDate","Date","getTime","localStorage","setItem","token","setTimeout","dispatch","commit","userId","register","_","console","log","name","surname","tryLogin","getItem","tokenExpiration","expiredIn","logout","removeItem","clearTimeout","autoLogOut"],"mappings":"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","sourcesContent":["import cred from '../../cred.js'\n\nlet timer\n\nexport default {\n    /**Login method\n     * \n     * @param {*} context \n     * @param {*} payload \n     */\n    async login(context, payload) {\n\n        let url = cred.dev.url_login\n\n        const response = await fetch(url, {\n            method: 'POST',\n            mode: 'cors', // no-cors, *cors, same-origin\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n            credentials: 'same-origin', // include, *same-origin, omit\n            headers: {\n                'Content-Type': 'application/json',\n\n            },\n            redirect: 'follow', // manual, *follow, error\n            referrerPolicy: 'no-referrer',\n            enctype: 'mutipart/form-data',\n            body: JSON.stringify({\n                email: payload.email,\n                password: payload.password\n            })\n        });\n        const responseData = await response.json()\n\n        if (!response.ok) {\n            if (responseData.code === 401) {\n                throw new Error(responseData.message)\n            } else\n                throw new Error(\"Request failed with error code: \" + response.status)\n\n        }\n        // qui tutto ok \n\n\n        // responseData.expiresIn = 3600 ,,, è in secondi [* 100 per ottenere millisecondi]\n        const expiresIn = +responseData.expiresIn * 1000\n            //  const expiresIn = 5000\n            // gets the time in milliseconds\n        const expirationDate = new Date().getTime() + expiresIn\n\n\n        localStorage.setItem('token', responseData.token)\n        localStorage.setItem('userId', responseData.email)\n        localStorage.setItem('tokenExpiration', expirationDate)\n\n\n        // dopo questo tempo 'expiresIn', la funzione viene eseguita\n        // Una volta logout, pulisco il timer con clearTimeout\n        timer = setTimeout(() => {\n            context.dispatch('autoLogOut')\n        }, expiresIn);\n\n\n        context.commit('setUser', {\n            token: responseData.token,\n            userId: responseData.email,\n        })\n\n\n    },\n\n\n    /**\n     * register method\n     * @param {*} _ \n     * @param {*} payload \n     */\n    async register(_, payload) {\n        let url = 'http://localhost:3000/register'\n        console.log(payload)\n        const response = await fetch(url, {\n            method: 'POST',\n            mode: 'cors', // no-cors, *cors, same-origin\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n            credentials: 'same-origin', // include, *same-origin, omit\n            headers: {\n                //      'Content-Type': 'application/json',\n                'Content-Type': 'application/x-www-form-urlencoded',\n\n\n            },\n            redirect: 'follow', // manual, *follow, error\n            referrerPolicy: 'no-referrer',\n            enctype: 'mutipart/form-data',\n            body: JSON.stringify({\n                name: payload.name,\n                surname: payload.surname,\n                email: payload.email,\n                password: payload.password\n            })\n        });\n        const responseData = await response.json()\n\n        if (!response.ok) {\n            if (responseData.code === 409) {\n                throw new Error(responseData.message)\n            } else\n                throw new Error(\"Request failed with error code: \" + response.status)\n\n        }\n\n\n    },\n\n    /**\n     * Get calls in every page riload\n     * @param {*} _ \n     * @param {*} payload \n     */\n    async tryLogin(context) {\n        const token = localStorage.getItem('token')\n        const userId = localStorage.getItem('userId')\n        const tokenExpiration = localStorage.getItem('tokenExpiration')\n\n        // prendo la differenza per capire se il token è scaduto\n        const expiredIn = +tokenExpiration - new Date().getTime();\n\n        if (expiredIn < 0) {\n            return\n        }\n\n        timer = setTimeout(() => {\n            context.dispatch('autoLogOut')\n        }, expiredIn)\n\n        if (token && userId) {\n            context.commit('setUser', {\n                token: token,\n                userId: userId,\n            })\n        }\n    },\n\n    /**\n     * Logs the user out\n     * @param {*} context \n     */\n    logout(context) {\n\n        localStorage.removeItem('token')\n        localStorage.removeItem('userId')\n        localStorage.removeItem('tokenExpiration')\n\n        clearTimeout(timer)\n\n        context.commit('setUser', {\n            token: null,\n            userId: null\n\n        })\n\n    },\n    autoLogOut(context) {\n        // chiama il metodo qui sopra 'logout\n        context.dispatch('logout')\n            // mette didAutoLogout = true nel index.js\n        context.commit('setAutoLogout')\n    }\n\n\n\n}"]}]}